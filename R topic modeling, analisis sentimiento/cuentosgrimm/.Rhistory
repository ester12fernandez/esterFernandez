tablacuentos$cuento <- factor(tablacuentos$cuento)
for (i in 1:length(quincecuentos)){
historias <- readLines(paste("datos/cuentos",
quincecuentos[i],
sep = "/"), encoding = "UTF-8")
temporal <- tibble(cuento = cuento[i],
parte = parte[i],
parrafo = seq_along(historias),
texto = historias)
tablacuentos <- bind_rows(tablacuentos, temporal)
}
library(widyr)
mensajes <- tibble(anno = character(),
rey = character(),
parrafo = numeric(),
texto = character())
cuentos <- tibble(cuento = character(),
parte = character(),
parrafo = numeric(),
texto = character())
cuentosparte <- cuentos %>%
filter(parte =="I") %>%
mutate(seccion = row_number()) %>%
unnest_tokens(palabra, texto) %>%
filter(!palabra %in% vacias$palabra)
cuentosparte
quincecuentos <- tibble(cuento = character(),
parte = character(),
parrafo = numeric(),
texto = character())
cuentosparte <- quincecuentos %>%
filter(parte =="I") %>%
mutate(seccion = row_number()) %>%
unnest_tokens(palabra, texto) %>%
filter(!palabra %in% vacias$palabra)
quincecuentos <- list.files(path ="datos/cuentos", pattern = "\\d+")
quincecuentos <- list.files(path ="datos/cuentos", pattern = "\\d+")
cuentos
library(tidyverse)
library(tidytext)
library(rvest)
library(readr)
sentimientos <- read_tsv("https://raw.githubusercontent.com/7PartidasDigital/AnaText/master/datos/diccionarios/sentimientos_2.txt",
col_types = "cccn",
locale = default_locale())
source("https://raw.githubusercontent.com/7PartidasDigital/R-LINHD-18/master/get_sentiments.R")
Blancanieve_y_rojarosa <- readLines("datos/cuentos/Blancanieve_y_rojarosa.txt", encoding = "UTF-8")
El_hombre_de_la_piel_de_oso <- readLines("datos/cuentos/El_hombre_de_la_piel_de_oso.txt", encoding = "UTF-8")
El_joven_gigante <- readLines("datos/cuentos/El_joven_gigante.txt", encoding = "UTF-8")
El_judio_en_las_espinas <- readLines("datos/cuentos/El_judio_en_las_espinas.txt", encoding = "UTF-8")
La_madre_vieja <- readLines("datos/cuentos/La_madre_vieja.txt", encoding = "UTF-8")
Juan_el_fiel <- readLines("datos/cuentos/Juan_el_fiel.txt", encoding = "UTF-8")
Juan_en_la_prosperidad <- readLines("datos/cuentos/Juan_en_la_prosperidad.txt", encoding = "UTF-8")
La_carga_ligera <- readLines("datos/cuentos/La_carga_ligera.txt", encoding = "UTF-8")
La_reina_de_las_abejas <- readLines("datos/cuentos/La_reina_de_las_abejas.txt", encoding = "UTF-8")
Las_tres_hilanderas <- readLines("datos/cuentos/Las_tres_hilanderas.txt", encoding = "UTF-8")
Los_doce_cazadores <- readLines("datos/cuentos/Los_doce_cazadores.txt", encoding = "UTF-8")
Los_musicos_de_Brema <- readLines("datos/cuentos/Los_musicos_de_Brema.txt", encoding = "UTF-8")
Los_tres_herederos_afortunados <- readLines("datos/cuentos/Los_tres_herederos_afortunados.txt", encoding = "UTF-8")
Rosa_con_espinas <- readLines("datos/cuentos/Rosa_con_espinas.txt", encoding = "UTF-8")
Ruiponche <- readLines("datos/cuentos/Ruiponche.txt", encoding = "UTF-8")
titulos <- c("Blancanieve y rojarosa",
"El hombre de la piel de oso",
"El joven gigante",
"El Judio en las espinas",
"La madre vieja",
"Juan el fiel",
"Juan en la prosperidad",
"La carga ligera",
"La reina de las abejas",
"Las tres hilanderas",
"Los doce cazadores",
"Los musicos de Brema",
"Los tres herederos afortunados",
"Rosa con Espinas",
"Ruiponche")
libros <- list(Blancanieve_y_rojarosa,
El_hombre_de_la_piel_de_oso,
El_joven_gigante,
El_judio_en_las_espinas,
Juan_el_fiel,
Juan_en_la_prosperidad,
La_carga_ligera,
La_madre_vieja,
La_reina_de_las_abejas,
Las_tres_hilanderas,
Los_doce_cazadores,
Los_musicos_de_Brema,
Los_tres_herederos_afortunados,
Rosa_con_espinas,
Ruiponche)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
serie <- NULL
for(i in seq_along(titulos)) {
limpio <- tibble(capitulo = seq_along(libros[[i]]),
texto = libros[[i]]) %>%
unnest_tokens(palabra, texto) %>%
mutate(libro = titulos[i]) %>%
select(libro, everything())
serie <- bind_rows(serie, limpio)
}
library(tidyverse)
library(tidytext)
library(rvest)
library(readr)
sentimientos <- read_tsv("https://raw.githubusercontent.com/7PartidasDigital/AnaText/master/datos/diccionarios/sentimientos_2.txt",
col_types = "cccn",
locale = default_locale())
source("https://raw.githubusercontent.com/7PartidasDigital/R-LINHD-18/master/get_sentiments.R")
install.packages("tm")
install.packages("topicmodels")
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(tidytext)
library(tm)
library(topicmodels)
library(scales)
library(tidyverse)
library(tidytext)
library(tm)
library(topicmodels)
library(scales)
vacias <- read_tsv("https://tinyurl.com//7PartidasVacias",
locale = default_locale())
titulos <- c("Blancanieve y Rojarosa",
"El Hombre de la piel de oso",
"El joven gigante",
"El judio en las espinas",
"La madre vieja",
"Juan el fiel",
"Juan en la prosperidad")
ficheros <- c("Blancanieve_y_rojarosa.txt",
"El_hombre_de_la_piel_de_oso.txt",
"El_joven_gigante.txt",
"El_judio_en_las_espinas.txt",
"la_madre_vieja.txt",
"Juan_el_fiel.txt",
"Juan_en_la_prosperidad.txt")
ruta <- "datos/cuentos/"
cuentos <- tibble(texto = character(),
titulo = character(),
pagina = numeric())
for (j in 1:length(ficheros)){
texto.entrada <- read_lines(paste(ruta,
ficheros[j],
sep = ""),
locale = default_locale())
texto.todo <- paste(texto.entrada, collapse = " ")
por.palabras <- strsplit(texto.todo, " ")
texto.palabras <- por.palabras[[1]]
trozos <- split(texto.palabras,
ceiling(seq_along(texto.palabras)/375))
for (i in 1:length(trozos)){
fragmento <- trozos[i]
fragmento.unido <- tibble(texto = paste(unlist(fragmento),
collapse = " "),
titulo = titulos[j],
pagina = i)
cuentos <- bind_rows(cuentos, fragmento.unido)
}
}
ceiling(38690/375)
rm(ficheros, titulos, trozos, fragmento,
fragmento.unido, ruta, texto.entrada,
texto.palabras, texto.todo, por.palabras, i, j)
por_pagina_palabras <- cuentos %>%
unite(titulo_pagina, titulo, pagina) %>%
unnest_tokens(palabra, texto)
por_pagina_palabras %>%
count(palabra, sort = T)
palabra_conteo <- por_pagina_palabras %>%
anti_join(vacias) %>%
count(titulo_pagina, palabra, sort = TRUE) %>%
ungroup()
paginas_dtm <- palabra_conteo %>%
cast_dtm(titulo_pagina, palabra, n)
paginas_lda <- LDA(paginas_dtm, k = 4, control = list(seed = 1234))
paginas_lda_td <- tidy(paginas_lda, matrix = "beta")
options(scipen=999)
terminos_frecuentes <- paginas_lda_td %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
terminos_frecuentes %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
#Clasificacion por documento
paginas_lda_gamma <- tidy(paginas_lda, matrix = "gamma")
paginas_lda_gamma <- paginas_lda_gamma %>%
separate(document,
c("titulo", "pagina"),
sep = "_", convert = TRUE)
ggplot(paginas_lda_gamma, aes(gamma, fill = factor(topic))) +
geom_histogram() +
facet_wrap(~ titulo, nrow = 2)
paginas_clasificaciones <- paginas_lda_gamma %>%
group_by(titulo, pagina) %>%
top_n(1, gamma) %>%
ungroup() %>%
arrange(gamma)
topico_cuento <- paginas_clasificaciones %>%
count(titulo, topic) %>%
group_by(titulo) %>%
top_n(1, n) %>%
ungroup() %>%
transmute(consenso = titulo, topic)
paginas_clasificaciones %>%
inner_join(topico_cuento, by = "topic") %>%
filter(titulo != consenso)
asignaciones <- augment(paginas_lda, data = paginas_dtm)
asignaciones <- asignaciones %>%
separate(document, c("titulo",
"pagina"),
convert = TRUE) %>%
inner_join(topico_cuento,
by = c(".topic" = "topic"))
asignaciones %>%
count(titulo, consenso, wt = count) %>%
group_by(titulo) %>%
mutate(porcentaje = n / sum(n)) %>%
ggplot(aes(consenso, titulo, fill = porcentaje)) +
geom_tile() +
scale_fill_gradient2(high = "blue", label = percent_format()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid = element_blank()) +
labs(x = "Asignó las palabras a…",
y = "Las palabras procedían de…",
fill = "% de asignaciones")
palabras_equivocadas <- asignaciones %>%
filter(titulo != consenso)
palabras_equivocadas %>%
count(titulo, consenso, term, wt = count) %>%
ungroup() %>%
arrange(desc(n))
paginas_lda <- LDA(paginas_dtm, k = 7, control = list(seed = 1234))
terminos_frecuentes %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
vacias <- read_tsv("https://tinyurl.com//7PartidasVacias",
locale = default_locale())
titulos <- c("Blancanieve y Rojarosa",
"El Hombre de la piel de oso",
"El joven gigante",
"El judio en las espinas",
"La madre vieja",
"Juan el fiel",
"Juan en la prosperidad")
ficheros <- c("Blancanieve_y_rojarosa.txt",
"El_hombre_de_la_piel_de_oso.txt",
"El_joven_gigante.txt",
"El_judio_en_las_espinas.txt",
"la_madre_vieja.txt",
"Juan_el_fiel.txt",
"Juan_en_la_prosperidad.txt")
ruta <- "datos/cuentos/"
cuentos <- tibble(texto = character(),
titulo = character())
library(tidyverse)
library(tidytext)
library(tm)
library(topicmodels)
library(scales)
vacias <- read_tsv("https://tinyurl.com//7PartidasVacias",
locale = default_locale())
titulos <- c("Blancanieve y Rojarosa",
"El Hombre de la piel de oso",
"El joven gigante",
"El judio en las espinas",
"La madre vieja",
"Juan el fiel",
"Juan en la prosperidad")
ficheros <- c("Blancanieve_y_rojarosa.txt",
"El_hombre_de_la_piel_de_oso.txt",
"El_joven_gigante.txt",
"El_judio_en_las_espinas.txt",
"la_madre_vieja.txt",
"Juan_el_fiel.txt",
"Juan_en_la_prosperidad.txt")
ruta <- "datos/cuentos/"
cuentos <- tibble(texto = character(),
titulo = character())
cuentos <- tibble(texto = character(),
titulo = character(),
pagina = numeric())
for (j in 1:length(ficheros)){
texto.entrada <- read_lines(paste(ruta,
ficheros[j],
sep = ""),
locale = default_locale())
texto.todo <- paste(texto.entrada, collapse = " ")
por.palabras <- strsplit(texto.todo, " ")
texto.palabras <- por.palabras[[1]]
trozos <- split(texto.palabras,
ceiling(seq_along(texto.palabras)/2299))
for (i in 1:length(trozos)){
fragmento <- trozos[i]
fragmento.unido <- tibble(texto = paste(unlist(fragmento),
collapse = " "),
titulo = titulos[j],
pagina = i)
cuentos <- bind_rows(cuentos, fragmento.unido)
}
}
length(ficheros)
rm(ficheros, titulos, trozos, fragmento,
fragmento.unido, ruta, texto.entrada,
texto.palabras, texto.todo, por.palabras, i, j)
por_pagina_palabras <- cuentos %>%
unite(titulo_pagina, titulo, pagina) %>%
unnest_tokens(palabra, texto)
por_pagina_palabras
por_pagina_palabras %>%
count(palabra, sort = T)
palabra_conteo <- por_pagina_palabras %>%
anti_join(vacias) %>%
count(titulo_pagina, palabra, sort = TRUE) %>%
ungroup()
paginas_dtm <- palabra_conteo %>%
cast_dtm(titulo_pagina, palabra, n)
paginas_lda <- LDA(paginas_dtm, k = 7, control = list(seed = 1234))
paginas_lda
paginas_lda_td <- tidy(paginas_lda, matrix = "beta")
paginas_lda_td
options(scipen=999)
terminos_frecuentes <- paginas_lda_td %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
terminos_frecuentes
terminos_frecuentes %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
#Clasificacion por documento
paginas_lda_gamma <- tidy(paginas_lda, matrix = "gamma")
paginas_lda_gamma <- paginas_lda_gamma %>%
separate(document,
c("titulo", "pagina"),
sep = "_", convert = TRUE)
ggplot(paginas_lda_gamma, aes(gamma, fill = factor(topic))) +
geom_histogram() +
facet_wrap(~ titulo, nrow = 2)
paginas_clasificaciones <- paginas_lda_gamma %>%
group_by(titulo, pagina) %>%
top_n(1, gamma) %>%
ungroup() %>%
arrange(gamma)
topico_cuento <- paginas_clasificaciones %>%
count(titulo, topic) %>%
group_by(titulo) %>%
top_n(1, n) %>%
ungroup() %>%
transmute(consenso = titulo, topic)
paginas_clasificaciones %>%
inner_join(topico_cuento, by = "topic") %>%
filter(titulo != consenso)
asignaciones <- augment(paginas_lda, data = paginas_dtm)
asignaciones <- asignaciones %>%
separate(document, c("titulo",
"pagina"),
convert = TRUE) %>%
inner_join(topico_cuento,
by = c(".topic" = "topic"))
asignaciones %>%
count(titulo, consenso, wt = count) %>%
group_by(titulo) %>%
mutate(porcentaje = n / sum(n)) %>%
ggplot(aes(consenso, titulo, fill = porcentaje)) +
geom_tile() +
scale_fill_gradient2(high = "blue", label = percent_format()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid = element_blank()) +
labs(x = "Asignó las palabras a…",
y = "Las palabras procedían de…",
fill = "% de asignaciones")
terminos_frecuentes %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
library(tidyverse)
library(tidytext)
library(rvest)
library(readr)
sentimientos <- read_tsv("https://raw.githubusercontent.com/7PartidasDigital/AnaText/master/datos/diccionarios/sentimientos_2.txt",
col_types = "cccn",
locale = default_locale())
source("https://raw.githubusercontent.com/7PartidasDigital/R-LINHD-18/master/get_sentiments.R")
Blancanieve_y_rojarosa <- readLines("datos/cuentos/Blancanieve_y_rojarosa.txt", encoding = "UTF-8")
El_hombre_de_la_piel_de_oso <- readLines("datos/cuentos/El_hombre_de_la_piel_de_oso.txt", encoding = "UTF-8")
El_joven_gigante <- readLines("datos/cuentos/El_joven_gigante.txt", encoding = "UTF-8")
El_judio_en_las_espinas <- readLines("datos/cuentos/El_judio_en_las_espinas.txt", encoding = "UTF-8")
La_madre_vieja <- readLines("datos/cuentos/La_madre_vieja.txt", encoding = "UTF-8")
Juan_el_fiel <- readLines("datos/cuentos/Juan_el_fiel.txt", encoding = "UTF-8")
Juan_en_la_prosperidad <- readLines("datos/cuentos/Juan_en_la_prosperidad.txt", encoding = "UTF-8")
La_carga_ligera <- readLines("datos/cuentos/La_carga_ligera.txt", encoding = "UTF-8")
La_reina_de_las_abejas <- readLines("datos/cuentos/La_reina_de_las_abejas.txt", encoding = "UTF-8")
Las_tres_hilanderas <- readLines("datos/cuentos/Las_tres_hilanderas.txt", encoding = "UTF-8")
Los_doce_cazadores <- readLines("datos/cuentos/Los_doce_cazadores.txt", encoding = "UTF-8")
Los_musicos_de_Brema <- readLines("datos/cuentos/Los_musicos_de_Brema.txt", encoding = "UTF-8")
Los_tres_herederos_afortunados <- readLines("datos/cuentos/Los_tres_herederos_afortunados.txt", encoding = "UTF-8")
Rosa_con_espinas <- readLines("datos/cuentos/Rosa_con_espinas.txt", encoding = "UTF-8")
Ruiponche <- readLines("datos/cuentos/Ruiponche.txt", encoding = "UTF-8")
rm(La_madre_vieja)
La_madre_vieja <- readLines("datos/cuentos/La_madre_vieja.txt", encoding = "UTF-8")
titulos <- c("Blancanieve y rojarosa",
"El hombre de la piel de oso",
"El joven gigante",
"El Judio en las espinas",
"La madre vieja",
"Juan el fiel",
"Juan en la prosperidad",
"La carga ligera",
"La reina de las abejas",
"Las tres hilanderas",
"Los doce cazadores",
"Los musicos de Brema",
"Los tres herederos afortunados",
"Rosa con Espinas",
"Ruiponche")
#Crear Lista
libros <- list(Blancanieve_y_rojarosa,
El_hombre_de_la_piel_de_oso,
El_joven_gigante,
El_judio_en_las_espinas,
Juan_el_fiel,
Juan_en_la_prosperidad,
La_carga_ligera,
La_madre_vieja,
La_reina_de_las_abejas,
Las_tres_hilanderas,
Los_doce_cazadores,
Los_musicos_de_Brema,
Los_tres_herederos_afortunados,
Rosa_con_espinas,
Ruiponche)
library(dplyr)
serie <- NULL
for(i in seq_along(titulos)) {
limpio <- tibble(capitulo = seq_along(libros[[i]]),
texto = libros[[i]]) %>%
unnest_tokens(palabra, texto) %>%
mutate(libro = titulos[i]) %>%
select(libro, everything())
serie <- bind_rows(serie, limpio)
}
serie$libro <- factor(serie$libro, levels = rev(titulos))
#cuántas palabras positivas y cuántas negativas hay y sus sentimientos
serie %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(sentimiento)) %>%
count(sentimiento, sort = TRUE)
#cuántas palabras positivas y cuántas negativas hay y sus sentimientos
serie %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(sentimiento)) %>%
count(sentimiento, sort = TRUE)
View(sentimientos)
#Crear Gran tabla
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
serie$libro <- factor(serie$libro, levels = rev(titulos))
#cuántas palabras positivas y cuántas negativas hay y sus sentimientos
serie %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(sentimiento)) %>%
count(sentimiento, sort = TRUE)
#solo palabras positivas y negativas (menos resultados por el diccionario bing)
serie %>%
right_join(get_sentiments("bing")) %>%
filter(!is.na(sentimiento)) %>%
count(sentimiento, sort = TRUE)
serie %>%
group_by(libro) %>%
mutate(recuento_palabras = 1:n(),
indice = recuento_palabras %/% 500 + 1) %>%
inner_join(get_sentiments("nrc")) %>%
count(libro, indice = indice , sentimiento) %>%
ungroup() %>%
spread(sentimiento, n, fill = 0) %>%
mutate(sentimiento = positivo - negativo, libro = factor(libro, levels = titulos)) %>%
ggplot(aes(indice, sentimiento, fill = libro)) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ libro, ncol = 2, scales = "free_x")
install.packages("udpipe")
library(udpipe)
tidyverse)
library(tidyverse)
udpipe_download_model(language = "spanish-gsd")
udpipe_download_model(language = "spanish-ancora")
modelo_ancora <- udpipe_load_model(file = 'spanish-ancora-ud-2.4-190531.udpipe')
modelo_ancora <- udpipe_load_model(file = 'spanish-ancora-ud-2.4-190531.udpipe')
modelo_gsd <- udpipe_load_model(file = 'spanish-gsd-ud-2.3-190531.udpipe')
